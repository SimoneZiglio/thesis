C
C    PROGRAMMA PER LO SCATTERING MULTIPLO IN CELLE COMPLESSE
C
      DIMENSION IND(10000),SCS(20),SCD(20,20),JSTAR(10),FASM(10001)
      DIMENSION TAUI(40),TAUU(40),TAUD(40),TAUUS(40),DTHG(30),VOLS(20)
      DIMENSION SCORR(20,20)
      REAL MUS(20),MUT(20),MUA
      COMMON /CILN/ RC(20),NCIL
      COMMON /LINUXR/ MA(55),INEXT,INEXTP
      JSTAR(1)=-11
      JSTAR(2)=-29
      JSTAR(3)=-13
      JSTAR(4)=-67
      JSTAR(5)=-89
      JSTAR(6)=-3
      JSTAR(7)=-19
      JSTAR(8)=-7
      JSTAR(9)=-23
      JSTAR(10)=-123
      
C
C    IL FATTORE DI CORREZIONE PER LE PICCOLE DISTANZE PUO' ESSERE
C    ADATTATO AL PROBLEMA SPECIFICO.
C    FATT=200. E' STATO FISSATO CON DELLE PROVE.
C    ***************
C      FATT=200.
C    ***************
C
      PG=ASIN(1.)*2.
      DPG=2.*PG
      QPG=4.*PG
      JJ=13
      OPEN(UNIT=4,FILE='FORT4',STATUS='OLD')
      READ(4,111)DNDAT,FATT
      NDAT=DNDAT
      DO 29 IINPUT=1,NDAT
      READ(4,111)DNCIL
      NCIL=DNCIL
C
C    I RAGGI DEVONO ESSERE ORDINATI CRESCENTI
C
      DO 1 I=1,NCIL
      READ(4,111)RC(I),MUS(I),MUA
      WRITE(6,111)RC(I),MUS(I),MUA
    1 MUT(I)=MUS(I)+MUA
      RMAX=RC(NCIL)
      DRC=RMAX*0.0001
      NK1=1
      DO 2 K=1,NCIL
      NK2=RC(K)/DRC
      DO 3 I=NK1,NK2
      IF(I.GT.10000)STOP 88
    3 IND(I)=K
    2 NK1=NK2+1
    5 READ(4,111)HC
      READ(4,111)DNEST
      READ(4,111)FWHM
      WRITE(6,333)HC,DNEST,FWHM
      DXF=RMAX*0.0002
      BEXP=SIGN(4.*ALOG(2.)/FWHM**2,FWHM)
      WRITE(6,222)BEXP
      DO 25 I=1,10001
      X=-RMAX+DXF*(I-1)
   25 FASM(I)=FASD(X,BEXP)
      READ(4,111)DNITH
      NITH=DNITH
      DO 24 ITH=1,NITH
   24 READ(4,111)DTHG(ITH)
      NEST=DNEST*0.1
C
C    PER IL VALORE DI FATT, VEDI COMMENTO SOPRA, LINEA 20.
C    *************
      DROSS=(FATT*RMAX**2*HC/DNEST)**0.333333
C    *************
C
      DRO2=DROSS**2
      DISTM=4.*RMAX+SQRT(HC**2+RMAX**2)
      DVOLS=DPG*RMAX*HC/DNEST
      DVOLD=(DPG*RMAX*HC)**2/DNEST
      OPEN(UNIT=5,FILE='OUTPUT.dat',STATUS='OLD')
      WRITE(5,666)'ANGLE TRASM EMME GAMMA'
      DO 29 ITH=1,NITH
      WRITE(6,444)DTHG(ITH)
      WRITE(5, 777,ADVANCE='NO')DTHG(ITH)
C      WRITE(5,555)DTHG(ITH), TRAS,SGAMMA,EMME
      DTH=DTHG(ITH)/180.*PG
      SDTH=SIN(DTH)
      CDTH=COS(DTH)
      TSRMAX=3.*RMAX*SDTH
      TCRMAX=3.*RMAX*CDTH
      DO 4 I=1,NCIL
      SCS(I)=0.
      VOLS(I)=0.
      DO 4 K=1,NCIL
    4 SCD(I,K)=0.
      DISTM=4.*RMAX+SQRT((2.*RMAX)**2+HC**2)
      DO 6 IRAND=1,10
      JJ=JSTAR(IRAND)
      DO 6 IEST=1,NEST
C      PRINT *, 'Entering loop for IEST = ', IEST
      R1=RMAX*RANDUN(JJ)
      INDC=INT(R1/DRC+1.00001)
      K1=IND(INDC)
      TH1=DPG*RANDUN(JJ)
      X1=R1*COS(TH1)
      Y1=R1*SIN(TH1)
      Z1=HC*RANDUN(JJ)
      IFASC=INT((X1+RMAX)/DXF+1.5)
      FASC=FASM(IFASC)
      R2=RMAX*RANDUN(JJ)
      INDC=INT(R2/DRC+1.00001)
      K2=IND(INDC)
      TH2=DPG*RANDUN(JJ)
      X2=R2*COS(TH2)
      Y2=R2*SIN(TH2)
      Z2=HC*RANDUN(JJ)
C
C    CALCOLO DELLA PRIMA INTERCETTA. QUESTA INTERCETTA VIENE USATA
C    PER LO SCATTERING SINGOLO E DOPPIO.
C
      X0=X1
      Y0=-DRMAX
      Z0=Z1
      CALL INTERC(X0,Y0,X1,Y1,TAUI,NTAUI)
      XF=X1+TSRMAX
      YF=Y1+TCRMAX
      ZF=Z1
      CALL INTERC(X1,Y1,XF,YF,TAUUS,NTAUUS)
      CALL INTERC(X1,Y1,X2,Y2,TAUD,NTAUD)
      XFD=X2+TSRMAX
      YFD=Y2+TCRMAX
      ZFD=Z2
      CALL INTERC(X2,Y2,XFD,YFD,TAUU,NTAUU)
C
C    TAUI: INTERCETTE INGRESSO SINGOLO E DOPPIO
C    TAUUS: INTERCETTE USCITA SINGOLO
C    TAUD: INTERCETTE INTERMEDIE DOPPIO
C    TAUU: INTERCETTE USCITA DOPPIO
C
C    CALCOLO ESPONENTE INGRESSO (SINGOLO E DOPPIO)
C
      DRY=Y1-Y0
      D12=DRY
      XEI=0.
      IF(NTAUI-2)12,13,13
   13 DO 7 I=2,NTAUI
      DI=D12*(TAUI(I)-TAUI(I-1))
      YS=Y0+DRY*(TAUI(I)+TAUI(I-1))*0.5
      INDC=INT(SQRT(X0**2+YS**2)/DRC+1.00001)
      KE=IND(INDC)
    7 XEI=XEI+DI*MUT(KE)
   12 DI=D12*(1.-TAUI(NTAUI))
      XEI=XEI+DI*MUT(K1)
C
C    CALCOLO ESPONENTE USCITA SINGOLO
C
      DRX=XF-X1
      DRY=YF-Y1
      D12=SQRT(DRX**2+DRY**2)
      XEUS=0.
      IF(NTAUUS-2)14,15,15
   15 DO 8 I=2,NTAUUS
      DI=D12*(TAUUS(I)-TAUUS(I-1))
      TAUM=(TAUUS(I)+TAUUS(I-1))*0.5
      XS=X1+DRX*TAUM
      YS=Y1+DRY*TAUM
      INDC=INT(SQRT(XS**2+YS**2)/DRC+1.00001)
      KE=IND(INDC)
    8 XEUS=XEUS+DI*MUT(KE)
   14 DI=D12*TAUUS(1)
      XEUS=XEUS+DI*MUT(K1)
C
C    CALCOLO USCITA DOPPIO
C
      DRX=XFD-X2
      DRY=YFD-Y2
      D12=SQRT(DRX**2+DRY**2)
      XEU=0.
      IF(NTAUU-2)16,18,18
   18 DO 9 I=2,NTAUU
      DI=D12*(TAUU(I)-TAUU(I-1))
      TAUM=(TAUU(I)+TAUU(I-1))*0.5
      XS=X2+DRX*TAUM
      YS=Y2+DRY*TAUM
      INDC=INT(SQRT(XS**2+YS**2)/DRC+1.00001)
      KE=IND(INDC)
    9 XEU=XEU+DI*MUT(KE)
   16 DI=D12*TAUU(1)
      XEU=XEU+DI*MUT(K2)
C
C    CALCOLO INTERMEDIO DOPPIO
C
      DRX=X2-X1
      DRY=Y2-Y1
      D122=DRX**2+DRY**2+(Z2-Z1)**2
      D12=SQRT(D122)
      XED=0.
      IF(NTAUD-2)19,20,20
   20 DO 10 I=2,NTAUD
      DI=D12*(TAUD(I)-TAUD(I-1))
      TAUM=(TAUD(I)+TAUD(I-1))*0.5
      XS=X1+DRX*TAUM
      YS=Y1+DRY*TAUM
      INDC=INT(SQRT(XS**2+YS**2)/DRC+1.00001)
      KE=IND(INDC)
   10 XED=XED+DI*MUT(KE)
   19 DI=D12
      IF(NTAUD)22,22,23
   23 DI=D12*TAUD(1)
      XED=XED+DI*MUT(K1)
      DI=D12*(1.-TAUD(NTAUD))
   22 XED=XED+DI*MUT(K2)
      SCS(K1)=SCS(K1)+EXP(-XEI-XEUS)*R1*FASC
      VOLS(K1)=VOLS(K1)+R1*FASC
      IF(K1.NE.K2)
     *SCD(K1,K2)=SCD(K1,K2)+EXP(-XEI-XED-XEU)*R1*R2/D122*FASC
      IF(K1.EQ.K2)
     *SCD(K1,K2)=SCD(K1,K2)+EXP(-XEI-XED-XEU)*R1*R2*FASC*
     *DIST2(D122,DRO2)
    6 CONTINUE
      DO 11 I=1,NCIL
      TRAS=SCS(I)/VOLS(I)
      SCS(I)=SCS(I)*DVOLS
      VOLS(I)=VOLS(I)*DVOLS
      IF(I.EQ.3)WRITE(5,222, ADVANCE='NO')TRAS
      DO 21 K=1,NCIL
      SCORR(I,K)=0.
      IF(I.EQ.K)SCORR(I,K)=DROSS*SCS(I)*MUS(I)**2/QPG
   21 SCD(I,K)=SCD(I,K)*DVOLD*MUS(I)*MUS(K)/QPG**2+SCORR(I,K)
      SCS(I)=SCS(I)*MUS(I)/QPG
      WRITE(6,222)SCS(I),VOLS(I),TRAS
   11 WRITE(6,222)(SCD(I,K),SCORR(I,K),K=1,NCIL)
      EMME=0.
      DO 26 I=1,NCIL
   26 EMME=EMME+SCD(1,I)
      DO 27 I=2,NCIL
   27 EMME=EMME+SCD(I,1)
      EMME=EMME/SCS(1)
      SGAMMA=0.
      DO 28 I=2,NCIL
      SGAMMA=SGAMMA+SCS(I)+SCD(I,I)
      DO 28 K=2,NCIL
C      WRITE(5,222, ADVANCE='NO')EMME
      IF((K.EQ.3).AND.(I.EQ.3))WRITE(5,222)EMME,SGAMMA
   28 IF(I.NE.K)SGAMMA=SGAMMA+SCD(I,K)
   29 WRITE(6,222)EMME,SGAMMA
      STOP
  111 FORMAT(8F10.4)
  222 FORMAT(5G14.4)
  333 FORMAT(F10.3,F10.0,4F10.4)
  444 FORMAT(/,'  ANGOLO DI SCATTERING=',F10.3,/)
  555 FORMAT(F10.3,5G14.4,5G14.4,5G14.4)
  666 FORMAT(A)
  777 FORMAT(F10.3)
      END
      SUBROUTINE INTERC(X1,Y1,X2,Y2,TAU,NTAU)
      DIMENSION TV(40),TAU(40)
      COMMON /CILN/ RC(20),NCIL
C
C    QUESTA SUBROUTINE CALCOLA TUTTE LE INTERCETTE E SCEGLIE
C    QUELLE UTILI ORDINANDOLE
C
      DX=X2-X1
      DY=Y2-Y1
      DIST=DX**2+DY**2
      DISTI=1./DIST
      B=-X1*DX-Y1*DY
      C=-(X1*Y2-Y1*X2)**2
      IV=1
      DO 1 IC=1,NCIL
      I=NCIL-IC+1
      DISC=DIST*RC(I)**2+C
      IF(DISC.LT.0.)GO TO 2
      DISC=SQRT(DISC)
      TV(IV)=(B-DISC)*DISTI
      IV=IV+1
      TV(IV)=(B+DISC)*DISTI
    1 IV=IV+1
    2 IT=IV-1
      IV=1
      DO 3 I=1,IT,2
      IF(TV(I).LT.0..OR.TV(I).GT.1.)GO TO 3
      TAU(IV)=TV(I)
      IV=IV+1
    3 CONTINUE
      DO 4 IC=2,IT,2
      I=IT-IC+2
      IF(TV(I).LT.0..OR.TV(I).GT.1.)GO TO 4
      TAU(IV)=TV(I)
      IV=IV+1
    4 CONTINUE
      NTAU=IV-1
      RETURN
      END
      FUNCTION RANDUN(IDUM)
C         IMPLICIT REAL*4(M)
C         PARAMETER (MBIG=4000000.,MSEED=1618033.,MZ=0.,FAC=2.5E-7)
      PARAMETER (MBIG=1000000000,MSEED=161803398,MZ=0,FAC=1.E-9)   
      COMMON /LINUXR/ MA(55),INEXT,INEXTP
C      DIMENSION MA(55)
      DATA IFF /0/
      IF(IDUM.LT.0.OR.IFF.EQ.0)THEN
        IFF=1
        MJ=MSEED-IABS(IDUM)
        MJ=MOD(MJ,MBIG)
        MA(55)=MJ
        MK=1
        DO 11 I=1,54
          II=MOD(21*I,55)
          MA(II)=MK
          MK=MJ-MK
          IF(MK.LT.MZ)MK=MK+MBIG
          MJ=MA(II)
11      CONTINUE
        DO 13 K=1,4
          DO 12 I=1,55
            MA(I)=MA(I)-MA(1+MOD(I+30,55))
            IF(MA(I).LT.MZ)MA(I)=MA(I)+MBIG
12        CONTINUE
13      CONTINUE
        INEXT=0
        INEXTP=31
        IDUM=1
      ENDIF
      INEXT=INEXT+1
      IF(INEXT.EQ.56)INEXT=1
      INEXTP=INEXTP+1
      IF(INEXTP.EQ.56)INEXTP=1
      MJ=MA(INEXT)-MA(INEXTP)
      IF(MJ.LT.MZ)MJ=MJ+MBIG
      MA(INEXT)=MJ
      RANDUN=MJ*FAC
      RETURN
      END
      FUNCTION FASD(X,BEXP)
C
C    CALCOLO DEL PROFILO DEL FASCIO
C
      FASD=1.
      IF(BEXP.LT.0.)RETURN
      FASD=EXP(-BEXP*X**2)
      RETURN
      END
      FUNCTION DIST2(RG,DRO)
C
C    CALCOLO DELLA DISTANZA QUADRATA E CORRETTA
C
      DIST2=1./RG
      IF(RG.GT.DRO)RETURN
      DIST2=0.
      RETURN
      END   
